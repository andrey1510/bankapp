server:
  port: 8890

spring:
  application:
    name: notificationservice
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
  mail:
    host: ${MAILHOG}
    port: ${MAIL_SMTP_PORT}
    username:
    password:
  kafka:
    bootstrap-servers: ${KAFKA_URL}
    topic:
      notifications: "notifications"
    consumer:
      group-id: "notifications-group"
      auto-offset-reset: "earliest"
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "com.notificationservice.dto.kafka.NotificationRequestDto"

management:
  endpoints:
    web:
      exposure:
        include: health,info,refresh,busrefresh,metrics,env
  endpoint:
    health:
      show-details: always
      access: unrestricted