services:

  accountservice:
    container_name: accountservice
    build:
      context: ./accountservice
      dockerfile: Dockerfile
    environment:
      DATASOURCE_URL: jdbc:postgresql://db:5432/accountdb
      DATASOURCE_USERNAME: login
      DATASOURCE_PASSWORD: password
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    ports:
      - 8881:8881
    depends_on:
      accountdb:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8881/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  blockerservice:
    container_name: blockerservice
    build:
      context: ./blockerservice
      dockerfile: Dockerfile
    ports:
      - 8882:8882
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8882/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  cashservice:
    container_name: cashservice
    build:
      context: ./cashservice
      dockerfile: Dockerfile
    ports:
      - 8883:8883
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8883/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  exchangegeneratorservice:
    container_name: exchangegeneratorservice
    build:
      context: ./exchangegeneratorservice
      dockerfile: Dockerfile
    ports:
      - 8886:8886
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    depends_on:
      exchangeservice:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8886/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  exchangeservice:
    container_name: exchangeservice
    build:
      context: ./exchangeservice
      dockerfile: Dockerfile
    environment:
      DATASOURCE_URL: jdbc:postgresql://db:5432/exchangedb
      DATASOURCE_USERNAME: login
      DATASOURCE_PASSWORD: password
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    ports:
      - 8887:8887
    depends_on:
      exchangedb:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8887/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  frontservice:
    container_name: frontservice
    build:
      context: ./frontservice
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  notificationservice:
    container_name: notificationservice
    build:
      context: ./notificationservice
      dockerfile: Dockerfile
    environment:
      DATASOURCE_URL: jdbc:postgresql://db:5432/notificationdb
      DATASOURCE_USERNAME: login
      DATASOURCE_PASSWORD: password
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    ports:
      - 8890:8890
    depends_on:
      notificationdb:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8890/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  transferservice:
    container_name: transferservice
    build:
      context: ./transferservice
      dockerfile: Dockerfile
    ports:
      - 8891:8891
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_EUREKA_ENABLED: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8891/actuator/health"]
      interval: 10s
      timeout: 8s
      retries: 30
    restart: unless-stopped
    networks:
      - bankapp-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_LOG_LEVEL: INFO
    ports:
      - "8892:8080"
    networks:
      - bankapp-network
    volumes:
      - ./keycloak-config.json:/opt/keycloak/data/import/keycloak-config.json
    command:
      - start-dev
      - --import-realm

  accountdb:
    container_name: accountdb
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=accountdb
      - POSTGRES_USER=login
      - POSTGRES_PASSWORD=password
    ports:
      - 5554:5432
    restart: unless-stopped
    networks:
      - bankapp-network

  notificationdb:
    container_name: notificationdb
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=notificationdb
      - POSTGRES_USER=login
      - POSTGRES_PASSWORD=password
    ports:
      - 5555:5432
    restart: unless-stopped
    networks:
      - bankapp-network

  exchangedb:
    container_name: exchangedb
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=exchangedb
      - POSTGRES_USER=login
      - POSTGRES_PASSWORD=password
    ports:
      - 5558:5432
    restart: unless-stopped
    networks:
      - bankapp-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - bankapp-network

networks:
  bankapp-network:
