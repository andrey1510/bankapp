server:
  port: 8883

spring:
  application:
    name: cashservice
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
      client:
        registration:
          account-service:
            client-id: cashservice
            client-secret: XZxKQ8kk6Rrdbe7RnsfwtBTgHkwAqQjm
            authorization-grant-type: client_credentials
            scope: accountservice.post
            provider: keycloak
          blocker-service:
            client-id: cashservice
            client-secret: XZxKQ8kk6Rrdbe7RnsfwtBTgHkwAqQjm
            authorization-grant-type: client_credentials
            scope: blockerservice.post
            provider: keycloak
        provider:
          keycloak:
            token-uri: ${ISSUER_URI}/protocol/openid-connect/token
            issuer-uri: ${ISSUER_URI}
  kafka:
    bootstrap-servers: ${KAFKA_URL}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
    topic:
      notifications: "notifications"
    properties:
      security.protocol: PLAINTEXT
    template:
      observation-enabled: true

accountservice:
  url: ${ACCOUNTSERVICE_API}

blockerservice:
  url: ${BLOCKERSERVICE_API}

management:
  endpoints:
    web:
      exposure:
        include: health,info,refresh,busrefresh,metrics,env,prometheus
  endpoint:
    health:
      show-details: always
      access: unrestricted
  tracing:
    enabled: true
    sampling:
      probability: 1
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL}